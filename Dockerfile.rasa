FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements-heroku.txt /app/

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-heroku.txt

# Copy project files
COPY . /app

# Remove any existing model files to force retraining
RUN rm -rf models/*

# Expose Rasa port
EXPOSE 5005

# Add a health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5005/ || exit 1

# Create an entrypoint script that handles both training and running
RUN echo '#!/bin/bash\n\
echo "Starting entrypoint script..."\n\
echo "Checking if model exists..."\n\
if [ ! -f "models/expobeton-railway.tar.gz" ]; then\n\
    echo "Model not found, training new model..."\n\
    echo "Checking training data..."\n\
    ls -la data/\n\
    echo "Checking domain files..."\n\
    ls -la domain/\n\
    echo "Training model with verbose output..."\n\
    rasa train --fixed-model-name expobeton-railway --out models/ --debug\n\
    echo "Checking if model was created..."\n\
    ls -la models/\n\
    if [ ! -f "models/expobeton-railway.tar.gz" ]; then\n\
        echo "ERROR: Model file was not created!"\n\
        echo "Listing all files in models directory:"\n\
        find models -type f\n\
        exit 1\n\
    fi\n\
    echo "Model training completed successfully."\n\
else\n\
    echo "Model already exists, skipping training."\n\
fi\n\
echo "Starting Rasa server..."\n\
exec rasa run --enable-api --port 5005 --cors "*" --debug -i 0.0.0.0 --model models/expobeton-railway.tar.gz\n\
' > entrypoint.sh && chmod +x entrypoint.sh

# Use the entrypoint script
ENTRYPOINT ["./entrypoint.sh"]